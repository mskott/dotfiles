#+TITLE: Martins EMACS configuration

* Table of contents                                            :TOC:noexport:
- [[#emacs][EMACS]]
- [[#ivy-mode][Ivy mode]]
- [[#markdown][Markdown]]
- [[#magit][Magit]]
- [[#org-mode][Org Mode]]
- [[#olivetti-mode][Olivetti mode]]
- [[#fonts][Fonts]]
- [[#handle-whitespace][Handle whitespace]]
- [[#yaml-mode][YAML mode]]
- [[#spellchecking][Spellchecking]]

* EMACS

  Hint: align comments using ~align-regexp~

  #+BEGIN_SRC emacs-lisp
	(setq-default
	 inhibit-startup-screen t			; Disable startup screen
	 tab-width 4						; Smaller tabs
	 indend-tabs-mode nil				; Spaces instead of tabs
	 visible-bell t						; No beep
	 )

	(global-auto-revert-mode t)			; Reload changed files
	(electric-pair-mode)				; Smart handling of parens
	(set-default-coding-systems 'utf-8)	; Default to UTF-8 encoding
	(tool-bar-mode -1)					; Disable the toolbar
	(column-number-mode t)				; Display column number in modeline
  #+END_SRC

* Ivy mode

[[https://oremacs.com/swiper/][Ivy mode manual]]

#+BEGIN_SRC emacs-lisp
  (use-package ivy
	:ensure t
	:config
	(ivy-mode 1))
#+END_SRC

* Markdown

  [[https://jblevins.org/projects/markdown-mode/][Markdown-mode]]

  #+BEGIN_SRC emacs-lisp
	(use-package markdown-mode
	  :ensure t
	  :custom
	  (markdown-asymmetric-header t)		; Only place header markup at begging of line
	  :hook
	  (markdown-mode . variable-pitch-mode)	; Display text in a variable pitch
	  (markdown-mode . visual-line-mode)	; Better handling of long line
	  )
  #+END_SRC

* Magit

  - [[https://magit.vc/][Magit]]
  [[https://emacsair.me/2017/09/01/magit-walk-through/][- Magit walk through]]

  #+BEGIN_SRC emacs-lisp
	(use-package magit
	  :ensure t)
  #+END_SRC

* Org Mode

  [[https://orgmode.org/][Org Mode]]

  Use ~describe-face~ to lookup faces and their use.

  #+BEGIN_SRC emacs-lisp
	(defun ms/org-font-setup ()
	  ;; Ensure some things are rendered as fixed-pitch even in variable-pitch mode
	  ;; Should be done with use-package :custom-face, but I couldn't get it to work with multiple faces
	  (set-face-attribute 'org-block nil			:foreground nil :inherit 'fixed-pitch)
	  (set-face-attribute 'org-checkbox nil			:inherit 'fixed-pitch)
	  (set-face-attribute 'org-code nil				:inherit '(shadow fixed-pitch))
	  (set-face-attribute 'org-meta-line nil		:inherit '(font-lock-comment-face fixed-pitch))
	  (set-face-attribute 'org-special-keyword nil	:inherit '(font-lock-comment-face fixed-pitch))
	  (set-face-attribute 'org-table nil			:inherit '(shadow fixed-pitch))
	  (set-face-attribute 'org-verbatim nil			:inherit '(shadow fixed-pitch)))
  #+END_SRC

  #+BEGIN_SRC emacs-lisp
	(use-package org
	  :ensure t
	  :custom
	  (org-src-tab-acts-natively t)
	  (org-return-follows-link t)			; Follow links when pressing RET
	  :bind (("C-c l" . org-store-link)
			 ("C-c a" . org-agenda)
			 ("C-c c" . org-capture))
	  :hook
	  (org-mode . variable-pitch-mode)	; Display text in a variable pitch
	  (org-mode . visual-line-mode)		; Better handling of long line
	  :config
	  (ms/org-font-setup))
  #+END_SRC

  [[https://github.com/snosov1/toc-org][Toc Org]]

  Use toc-org to generate table of contents. Put ~:TOC:~ tag (C-c C-q) to a heading and run ~toc-org-insert-toc~ to insert a toc

  #+BEGIN_SRC emacs-lisp
	(use-package toc-org
	  :ensure t
	  :after org
	  :hook
	  (org-mode . toc-org-mode)
	  (markdown-mode . toc-org-mode))
  #+END_SRC

* Olivetti mode

  #+BEGIN_SRC emacs-lisp
	(use-package olivetti
	  :ensure t
	  :hook
	  (text-mode . olivetti-mode)
	  :custom
	  (olivetti-body-width 120)) ; Make text body a bit wider
  #+END_SRC

* Fonts

  Fonts are strange - be carefull when setting hight, 20 is way too small.
  
  #+BEGIN_SRC emacs-lisp
	;; Default face
	(set-face-attribute 'default nil
						:font "DejaVu Sans Mono"
						:height 100)

	;; Fixed pitch face (aka. monospace text)
	(set-face-attribute 'fixed-pitch nil
						:font "DejaVu Sans Mono"
						:height 100)

	;; Variable pitch face - good for documents
	(set-face-attribute 'variable-pitch nil
						:font "Cantarell"
						:height 110
						:weight 'regular)
  #+END_SRC

  The changes above makes some parts of Org buffers look wrong since they are  better off being monospaced - see Org-mode for how to fix.

* Handle whitespace

  https://github.com/lewang/ws-butler

  #+BEGIN_SRC emacs-lisp
	(use-package ws-butler
	  :ensure t
	  :hook
	  (text-mode . ws-butler-mode)
	  (prog-mode . ws-butler-mode))
  #+END_SRC

* YAML mode

  #+BEGIN_SRC emacs-lisp
	(use-package yaml-mode
	  :ensure t)
  #+END_SRC

* Spellchecking

#+BEGIN_SRC emacs-lisp
  (use-package flyspell
	:ensure t
	:hook
	(text-mode . flyspell-mode)
	)

  (use-package flyspell-correct
	:after flyspell
	:ensure t
	:bind (:map flyspell-mode-map ("C-;" . flyspell-correct-wrapper)))

  (use-package flyspell-correct-ivy
	:after flyspell-correct
	:ensure t)
#+END_SRC
